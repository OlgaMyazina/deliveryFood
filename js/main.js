'use strict';

const cartButton = document.getElementById('cart-button'),
  modal = document.querySelector('.modal'),
  close = document.querySelector('.close'),
  buttonAuth = document.querySelector('.button-auth'),
  modalAuth = document.querySelector('.modal-auth'),
  closeAuth = document.querySelector('.close-auth'),
  logInForm = document.getElementById('logInForm'),
  loginInput = document.getElementById('login'),
  userName = document.querySelector('.user-name'),
  buttonOut = document.querySelector('.button-out'),
  cardsRestaurants = document.querySelector('.cards-restaurants'),
  containerPromo = document.querySelector('.container-promo'),
  restaurants = document.querySelector('.restaurants'),
  menu = document.querySelector('.menu'),
  logo = document.querySelector('.logo'),
  cardsMenu = document.querySelector('.cards-menu'),
  inputSearch = document.querySelector('.input-search'),
  restaurantTitle = document.querySelector('.restaurant-title'),
  restaurantRating = document.querySelector('.section-heading .rating'),
  restaurantPrice = document.querySelector('.section-heading .price'),
  restaurantKitchen = document.querySelector('.section-heading .category'),
  modalBody = document.querySelector('.modal-body'),
  modalPrice = document.querySelector('.modal-pricetag'),
  buttonClearCart = document.querySelector('.clear-cart');

let cart = JSON.parse(localStorage.getItem('cart'));
let login = localStorage.getItem('login');

/**
 * @param url
 * @returns {Promise<void>}
 * –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ json –∏–∑ –ø–∞–ø–∫–∏ db
 */
const getData = async (url) => {
  //–ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const response = await fetch(url);
  //–µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 200 (–±–µ–∑ –æ—à–∏–±–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö)
  if (!response.ok) {
    //—Å–æ–∑–¥–∞—ë–º –æ—à–∏–±–∫—É
    throw new Error(`–û—à–∏–±–∫–∞ –ø–æ –∞–¥—Ä—Ä–µ—Å—É ${url}, —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏ ${response.status}!`);
  }
  return await response.json();
};


//—Ñ—É–Ω–∫–∏—Ü—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ login
const valid = function (str) {
  const nameReg = /^[a-zA-Z–∞-—è—ë–ê-–Ø–Å0-9.\s\-]{1,20}$/;
  return nameReg.test(str);
};

/**
 * –º–µ—Ç–æ–¥ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç-–∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ (–ø–µ—Ä–µ–¥–∞—ë–º —ç–ª–µ–º–µ–Ω—Ç-–º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –º–µ–Ω—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏)
 */

const toggleModal = (htmlElement) => {
  htmlElement.classList.toggle('is-open');
};

const handlerToggleModalAuth = () => {
  toggleModal(modalAuth);
};

/**
 * –º–µ—Ç–æ–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–≥–∏–Ω –∏ –∫–Ω–æ–ø–∫—É "–í—ã—Ö–æ–¥"
 */

const authorized = () => {

  const logOut = () => {
    login = null;
    buttonAuth.style.display = '';
    userName.style.display = '';
    buttonOut.style.display = '';
    cartButton.style.display = '';

    buttonOut.removeEventListener('click', logOut);
    localStorage.removeItem('login');
    checkAuth();
  };
  //–¥–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏–Ω –∏ –∫–Ω–æ–ø–∫—É "–í—ã–π—Ç–∏"
  userName.textContent = login;
  buttonAuth.style.display = 'none';
  userName.style.display = 'inline';
  buttonOut.style.display = 'flex';
  cartButton.style.display = 'flex';
  //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "–í—ã–π—Ç–∏"
  buttonOut.addEventListener('click', logOut);
};

/**
 * –º–µ—Ç–æ–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
const notAuthorized = () => {

  const logIn = (event) => {
    //–æ—Ç–º–µ–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è submit
    event.preventDefault();
    //–ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ —Å –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞
    const userName = loginInput.value.trim();
    if (userName && valid(loginInput.value)) {

      //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é
      loginInput.style.borderColor = "";
      //–¥–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä—Ä–µ–º–µ–Ω–Ω—É—é –ª–æ–≥–∏–Ω–∞
      localStorage.setItem('login', userName);
      login = userName;
      //–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
      toggleModal(modalAuth);
      //—É–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –∑–∞–∫—Ä—ã—Ç–æ–π —Ñ–æ—Ä–º—ã
      buttonAuth.removeEventListener('click', handlerToggleModalAuth);
      closeAuth.removeEventListener('click', handlerToggleModalAuth);
      logInForm.removeEventListener('submit', logIn);
      logInForm.reset();
      //–≤—ã–∑—ã–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      checkAuth();
    } else {
      //–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤–µ–ª –ª–æ–≥–∏–Ω, –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –ø–æ–ª–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º placeholder
      loginInput.style.borderColor = "red";
      loginInput.placeholder = "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω";
    }

  };
  //–æ–±—Ä–∞–±–æ—á–∏–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ "üòä –í–æ–π—Ç–∏" (–¥–µ–π—Å—Ç–≤–∏–µ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ), "–í–æ–π—Ç–∏", —Ö,
  buttonAuth.addEventListener('click', handlerToggleModalAuth);
  closeAuth.addEventListener('click', handlerToggleModalAuth);
  logInForm.addEventListener('submit', logIn);
};

/**
 * –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
const checkAuth = () => {
  login ? authorized() : notAuthorized();
};

/**
 * @returns {{tag: string, cls: string[], content: *[]}}
 * –û–±—ä–µ–∫—Ç-—à–∞–±–ª–æ–Ω –≤—ë—Ä—Å—Ç–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –¥–ª—è browserJSEngine
 */

const cardRestaurantJSTemplate = (restaurant) => {
    const {name, image, kitchen, price, products, stars, time_of_delivery: timeOfDelivery} = restaurant;
    return {
      tag: 'a',
      cls: ['card', 'card-restaurant'],
      attrs: {"data-products": products},
      content:
        [
          {
            tag: 'img',
            cls: 'card-image',
            attrs: {alt: 'image', src: image}
          },
          {
            tag: 'div',
            cls: 'card-text',
            content: [
              {
                tag: 'div',
                cls: 'card-heading',
                content: [
                  {tag: 'h3', cls: 'card-title', content: name},
                  {tag: 'span', cls: ['card-tag', 'tag'], content: `${timeOfDelivery} –º–∏–Ω`}
                ],
              },
              {
                tag: 'div',
                cls: 'card-info',
                content: [
                  {tag: 'div', cls: 'rating', content: stars},
                  {tag: 'div', cls: 'price', content: `–û—Ç ${price} ‚ÇΩ`},
                  {tag: 'div', cls: 'category', content: kitchen},
                ],
              }
            ]
          }
        ]
    }
  }
;

/**
 *
 * @param block - –æ–±—ä–µ–∫—Ç –≤—ë—Ä—Å—Ç–∫–∏
 * @returns {*} - HTML —ç–ª–µ–º–µ–Ω—Ç
 * browserJSEngine - —Å–≤–æ–µ–æ–±—Ä–∞–∑–Ω—ã–π –¥–≤–∏–∂–æ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç –º–µ—Ç–æ–¥–∞
 * –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –æ–±—ä–µ–∫—Ç–∞ - –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç, —Ç–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—É—Å—Ç–∞—è —Ç–µ–∫—Å—Ç–æ–≤–∞—è –Ω–æ–¥–∞ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç)
 * –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –æ–±—ä–µ–∫—Ç–∞ - —Å—Ç—Ä–æ–∫–∞, —á–∏—Å–ª–æ, —Ç–æ —Å–æ–∑–¥–∞—ë–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –Ω–æ–¥—É —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º
 * –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –æ–±—ä–µ–∫—Ç–∞ - –º–∞—Å—Å–∏–≤, —Ç–æ —Ä–µ–∫–∫—É—Ä—Å–∏–≤–Ω–æ —Å–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ —Ñ—Ä—Ä–∞–≥–º–µ–Ω—Ç
 * –°–æ–∑–¥–∞—ë–º —ç–ª–µ–º–µ–Ω—Ç, –Ω—É–∂–Ω–æ–≥–æ —Ç–∏–ø–∞ (–ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é, div), –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã, –∞—Ç—Ç—Ä–∏–±—É—Ç—ã
 * –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ = content, —Ç–æ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
 *
 * –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç
 */

const browserJSEngine = (block) => {

  if ((block === undefined) || (block === null) || (block === false))
    return document.createTextNode("");

  if ((typeof block === 'string') || (typeof block === 'number') || (block === true))
    return document.createTextNode(block.toString());

  if (Array.isArray(block)) {
    return block.reduce((f, el) => {
      f.appendChild(browserJSEngine(el));
      return f;
    }, document.createDocumentFragment());
  }

  const element = document.createElement(block.tag || 'div');
  element.classList.add(...[].concat(block.cls).filter(Boolean));

  if (block.attrs) {
    Object.keys(block.attrs).forEach(key => {
      element.setAttribute(key, block.attrs[key]);
    })
  }

  if (block.content) element.appendChild(browserJSEngine(block.content));
  return element;
};

/**
 * createCardRestaurantHTML - –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
 *
 * –û–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –º–µ—Ç–æ–¥—É browserJSEngine - "–¥–≤–∏–∂–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ë—Ä—Å—Ç–∫–∏ –∏–∑ –æ–±—ä–µ–∫—Ç–∞"
 * —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º cardRestaurantJSTemplate - –æ–±—ä–µ–∫—Ç –≤—ë—Ä—Å—Ç–∫–∏
 * */

const createCardRestaurant = (restaurant) => {
  const card = browserJSEngine(cardRestaurantJSTemplate(restaurant));
  card.products = restaurant.products;
  card.info = [restaurant.name, restaurant.stars, restaurant.price, restaurant.kitchen];
  cardsRestaurants.appendChild(card);
};

/**
 * createCardRestaurantHTML - –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
 *
 * –≤–∞—Ä–∏–∞–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≤—ë—Ä—Å—Ç–∫–∏ –≤ js:
 * 1. –∫–æ–ø–∏—Ä—É–µ–º –≤—ë—Ä—Å—Ç–∫—É –≤ "—à–∞–±–ª–æ–Ω–Ω—É—é" —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—å—é –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫
 * 2. —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ insertAdjacentHTML –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ HTML —Ñ—Ä–∞–≥–º–µ–Ω—Ç –≤ DOM
 * (–º–µ—Ç–æ–¥ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–∞–∫ HTML –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —É–∑–ª—ã (nodes) –≤ DOM –¥–µ—Ä–µ–≤–æ –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é).
 *
 * Note: —É –º–µ—Ç–æ–¥–∞ insertAdjacentHTML –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞:
 * * –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è: 'beforebegin'|'afterbegin'|'beforeend'|'afterend'
 *   –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–∑–∏—Ü–∏—é –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–∞, –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –º–µ—Ç–æ–¥
 * * –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç - —Å—Ç—Ä–æ–∫–∞ HTML
 */
const createCardRestaurantHTML = (restaurant) => {
  const {name, image, kitchen, price, products, stars, time_of_delivery: timeOfDelivery} = restaurant;

  const card = document.createElement('a');
  card.classList.add('card');
  card.classList.add('card-restaurant');
  card.products = products;
  card.info = [name, stars, price, kitchen];

  card.insertAdjacentHTML('beforeend', `
			<img src="${image}" alt="image" class="card-image"/>
			<div class="card-text">
				<div class="card-heading">
				  <h3 class="card-title">${name}</h3>
				  <span class="card-tag tag">${timeOfDelivery} –º–∏–Ω</span>
			  </div>
				<div class="card-info">
				  <div class="rating">${stars}</div>
				  <div class="price">–û—Ç ${price} ‚ÇΩ</div>
				  <div class="category">${kitchen}</div>
			  </div>
		  </div>
  `);

  cardsRestaurants.insertAdjacentElement('beforeend', card);
};


const createHeaderGoods = (name, stars, price, kitchen) => {
  restaurantTitle.textContent = name;
  restaurantRating.textContent = stars;
  restaurantPrice.textContent = `–û—Ç ${price} ‚ÇΩ`;
  restaurantKitchen.textContent = kitchen;
};

/**
 * createCardGood - –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
 *
 * –≤–∞—Ä–∏–∞–Ω—Ç –≤—ë—Ä—Å—Ç–∫–∏:
 * 1. —Å–æ–∑–¥–∞—ë–º —Ä–æ–¥–∏—Ç–µ–ª—å–∫—É—é –Ω–æ–¥—É
 * 2. –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã, –∞—Ç—Ç—Ä–∏–±—É—Ç—ã
 * 3. –¥–æ–±–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π –≤—ë—Ä—Å—Ç–∫—É —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ innerHTML
 * 4. –¥–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –Ω–æ–¥—É –≤ DOM —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ insertAdjacentElement
 */

const createCardGood = (good) => {
  const {description, id, image, name, price} = good;
  const card = document.createElement('div');
  card.classList.add('card');
  card.insertAdjacentHTML('beforeend', `
						<img src="${image}" alt="${name}" class="card-image" data-id="${id}"/>
						<div class="card-text">
							<div class="card-heading">
								<h3 class="card-title card-title-reg">${name}</h3>
							</div>
							<div class="card-info">
								<div class="ingredients">${description}</div>
							</div>
							<div class="card-buttons">
								<button class="button button-primary button-add-cart">
									<span class="button-card-text">–í –∫–æ—Ä–∑–∏–Ω—É</span>
									<span class="button-cart-svg"></span>
								</button>
								<strong class="card-price card-price-bold">${price} ‚ÇΩ</strong>
							</div>
						</div>
`);
  cardsMenu.insertAdjacentElement('beforeend', card);
};

/**
 * createCardGood - –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
 *
 * –≤–∞—Ä–∏–∞–Ω—Ç –≤—ë—Ä—Å—Ç–∫–∏ js:
 * 1. –°–æ–∑–¥–∞—ë–º –Ω–æ–¥—É
 * 2. –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã, –∞—Ç—Ä–∏–±—É—Ç—ã, –∫–æ–Ω—Ç–µ–Ω—Ç
 * 3. –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —Ç–æ —Å–æ–∑–¥–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã (—à–∞–≥–∏ 1. –∏ 2.)
 * 4. –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π (–∏–ª–∏ –Ω–∞—á–∞–ª—å–Ω—ã–π) HTML —ç–ª–µ–º–µ–Ω—Ç
 */

const createCardGoodJS = (good) => {
  const card = document.createElement('div');
  card.className = 'card';
  card.setAttribute('id', good.id);

  const image = document.createElement('img');
  image.className = 'card-image';
  image.setAttribute('alt', good.name);
  image.setAttribute('src', good.image);
  card.appendChild(image);

  const cardText = document.createElement('div');
  cardText.className = 'card-text';
  const cardHeading = document.createElement('div');
  cardHeading.className = 'card-heading';
  const cardTitle = document.createElement('h3');
  cardTitle.className = 'card-title card-title-reg';
  cardTitle.textContent = good.name;
  cardHeading.appendChild(cardTitle);
  cardText.appendChild(cardHeading);

  const cardInfo = document.createElement('div');
  cardInfo.className = 'card-info';
  const ingredients = document.createElement('div');
  ingredients.className = 'ingredients';
  ingredients.textContent = good.description;
  cardInfo.appendChild(ingredients);
  cardText.appendChild(cardInfo);

  const cardButtons = document.createElement('div');
  cardButtons.className = 'card-buttons';
  const button = document.createElement('button');
  button.className = 'button button-primary button-add-cart';
  const buttonCardText = document.createElement('span');
  buttonCardText.className = 'button-card-text';
  buttonCardText.textContent = '–í –∫–æ—Ä–∑–∏–Ω—É';
  const buttonCartSvg = document.createElement('span');
  buttonCartSvg.className = 'button-cart-svg';
  button.appendChild(buttonCardText);
  button.appendChild(buttonCartSvg);
  cardButtons.appendChild(button);

  const cardPriceBold = document.createElement('strong');
  cardPriceBold.className = 'card-price-bold';
  cardPriceBold.className = 'card-price';
  cardPriceBold.textContent = `${good.price} ‚ÇΩ`;

  cardButtons.appendChild(button);
  cardButtons.appendChild(cardPriceBold);
  cardText.appendChild(cardButtons);
  card.appendChild(cardText);
  cardsMenu.appendChild(card);

};

/**
 * @param event
 * –ú–µ—Ç–æ–¥ - –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
 */

const openGoods = (event) => {
  //–µ—Å–ª–∏ –ª–æ–≥–∏–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω, —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
  if (!login) {
    toggleModal(modalAuth);
    return;
  }
  const restaurant = event.target.closest('.card-restaurant');
  //–∏–∑–º–µ–Ω—è–µ–º –≤–Ω–µ—à–Ω–µ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤
  if (restaurant) {
    createHeaderGoods(...restaurant.info);

    //–æ—Ñ–æ—Ä–º–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
    goToCatalog();

    getData(`./db/${restaurant.products}`).then((data) => {
      data.map(dataElem => {
        //—Å–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–º–æ—â—å—é HTML
        //createCardGood(dataElem);
        //—Å–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–º–æ—â—å—é JS
        createCardGoodJS(dataElem, restaurant.dataset.restaurant);
      })
    });
  }
};

/**
 * –º–µ—Ç–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ logo
 * (–Ω–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ - –≤—ã–±–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤)
 */
const goToHome = () => {
  containerPromo.classList.remove('hide');
  restaurants.classList.remove('hide');
  menu.classList.add('hide');
};

/**
 * –º–µ—Ç–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
 */

const goToCatalog = () => {
  containerPromo.classList.add('hide');
  restaurants.classList.add('hide');
  menu.classList.remove('hide');
  cardsMenu.textContent = "";
};

/**
 * @param event - —Å–æ–±—ã—Ç–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
 *
 */
const handleSearch = (event) => {
  //–ø–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏—à—É enter
  if (event.key !== 'Enter') {
    return;
  }
  //–ø–æ–ª—É—á–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—É—é —Å—Ç—Ä–æ–∫—É, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ —Ä–µ–≥–∏—Å—Ç—Ä
  const value = event.target.value.toLowerCase().trim();

  if (!value) {
    event.target.style.borderColor = "tomato";
    setTimeout(function () {
      event.target.style.borderColor = "";
      event.target.value = "";
    }, 2000);
    return;
  }
  const goods = [];
  //–ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
  getData('./db/partners.json')
    .then(data => {
      //–∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Å—Ç–æ–∞–Ω–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
      const products = data.map(item => item.products);
      //–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥ –∏ –ø–æ–ª—É—á–∞–µ–º –Ω–µ–ø–æ—Å—Ä—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å–∞–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
      products.forEach(product => {
        //–ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
        getData(`./db/${product}`)
          .then(data => {
            //—Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –≤—Å–µ—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤ goods
            goods.push(...data);

            //–æ—Ñ–æ—Ä–º–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
            goToCatalog();
            createHeaderGoods("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞", "", "", "");

            //—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –ø–µ—Ä–µ–¥–∞—ë–º –¥–∞–ª—å—à–µ
            return goods.filter(item =>
              item.name.toLowerCase().includes(value));

          })
          //–¥–∞—Ç–∞ - —ç—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞, –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ - —Å–æ–∑–¥–∞—ë–º —ç–ª–µ–º–µ–Ω—Ç
          .then(data =>
            data.forEach(elem => createCardGood(elem))
          )
      })
    });
  event.target.value = "";
};


/**
 * —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É
 */
function addToCart(event) {
  const buttonAddToCart = event.target.closest('.button-add-cart');
  if (!buttonAddToCart) {
    return;
  }
  const card = event.target.closest('.card');
  const title = card.querySelector('.card-title-reg').textContent;
  const cost = card.querySelector('.card-price').textContent;
  const id = card.getAttribute('id');

  const food = cart.find(function (item) {
    return item.id === id;
  });

  if (food) {
    food.count++;
  } else {
    cart.push({id, title, cost, count: 1});
  }
  localStorage.setItem('cart', JSON.stringify(cart));
}

//—Å–æ–∑–¥–∞—ë–º –≤—ë—Ä—Å—Ç–∫—É —ç–ª–µ–º–µ–Ω—Ç–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ
const renderCart = () => {
  //–æ—á–∏—Å—Ç–∏–ª–∏ –∫–æ—Ä–∑–∏–Ω—É
  modalBody.textContent = "";
  //–¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ —Å–æ–∑–¥–∞—ë–º –≤—ë—Ä—Å—Ç–∫—É:
  cart.forEach(({id, title, cost, count}) => {
    const itemCard = `
        <div class="food-row">
					<span class="food-name">${title}</span>
					<strong class="food-price">${cost}</strong>
					<div class="food-counter">
						<button class="counter-button counter-minus " data-id="${id}">-</button>
						<span class="counter">${count}</span>
						<button class="counter-button counter-plus " data-id="${id}">+</button>
					</div>
				</div>
    `;
    //–¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM
    modalBody.insertAdjacentHTML('afterbegin', itemCard);
  });
  //—Å—É–º–º–∏—Ä—É–µ–º
  const totalPrice = cart.reduce((sum, item) => {
    return sum + parseFloat(item.cost) * item.count;
  }, 0);
  modalPrice.textContent = `${totalPrice} P`;
};

const changeCount = (event) => {
  if (!event.target.classList.contains('counter-button')) {
    return;
  }
  const food = cart.find(function (item) {
    return item.id === event.target.dataset.id
  });

  if (event.target.classList.contains('counter-minus')) {
    food.count--;
    if (food.count === 0) {
      cart.splice(cart.indexOf(food), 1);
    }
  }
  if (event.target.classList.contains('counter-plus')) {
    food.count++;
  }
  localStorage.setItem('cart', JSON.stringify(cart));
  renderCart();
};

function init() {
  if (!cart) {
    localStorage.setItem('cart', JSON.stringify([]));
    cart = [];
  }
  //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–æ—Ä–∑–∏–Ω—É
  cartButton.addEventListener('click', () => {
    renderCart();
    toggleModal(modal);
  });
  //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  close.addEventListener('click', toggleModal.bind(null, modal));
  //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
  cardsRestaurants.addEventListener('click', openGoods);
  //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ logo (–≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞)
  logo.addEventListener('click', goToHome);
  //–æ–±–∞–±–æ—Ç—á–∏–∫ —ç–Ω—Ç–µ—Ä–∞ –≤ –ø–æ–∏—Å–∫–µ
  inputSearch.addEventListener('keydown', handleSearch);
  //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
  cardsMenu.addEventListener('click', addToCart);
  //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –ø–æ–∑–∏—Ü–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ
  modalBody.addEventListener('click', changeCount);
  //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ - –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
  buttonClearCart.addEventListener('click', () => {
    cart.length = 0;
    localStorage.removeItem('cart');
    renderCart();
  });

  //–≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  checkAuth();

  getData('./db/partners.json').then((data) => {
    data.map(dataElem => {
      //c–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–æ—á–∫—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é —à–∞–±–ª–æ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ HTML
      createCardRestaurantHTML(dataElem);
      //—Å–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ä—Ç–æ—á–∫—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é –æ–±—ä–µ–∫—Ç–∞-–≤—ë—Ä—Å—Ç–∫–∏ –∏ "–¥–≤–∏–∂–∫–∞"
      //createCardRestaurant(dataElem);
    })
  });
}

init();

//–ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É Swiper
new Swiper('.swiper-container', {
  //—á—Ç–æ–±—ã –±—ã–ª –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π
  loop: true,
  //–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ
  autoplay: {
    delay: 3000,
  },
  slidePerView: 1,
  sliderPerColumn: 1,
});